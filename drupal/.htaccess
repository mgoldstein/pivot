#
# Apache/PHP/Drupal settings:
#

# Protect files and directories from prying eyes.
<FilesMatch "\.(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)(|~|\.sw[op]|\.bak|\.orig|\.save)?$|^(\..*|Entries.*|Repository|Root|Tag|Template)$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig\.save)$">
  Order allow,deny
</FilesMatch>

# Don't show directory listings for URLs which map to a directory.
Options -Indexes

# Follow symbolic links in this directory.
Options +FollowSymLinks

# Make Drupal handle any 404 errors.
ErrorDocument 404 /index.php

# Set the default handler.
DirectoryIndex index.php index.html index.htm


# Override PHP settings that cannot be changed at runtime. See
# sites/default/default.settings.php and drupal_environment_initialize() in
# includes/bootstrap.inc for settings that can be changed at runtime.

# PHP 5, Apache 1 and 2.
<IfModule mod_php5.c>
  php_flag magic_quotes_gpc                 off
  php_flag magic_quotes_sybase              off
  php_flag register_globals                 off
  php_flag session.auto_start               off
  php_value mbstring.http_input             pass
  php_value mbstring.http_output            pass
  php_flag mbstring.encoding_translation    off
  php_value upload_max_filesize             64M
  php_value post_max_size                   128M
</IfModule>

# Requires mod_expires to be enabled.
<IfModule mod_expires.c>
  # Enable expirations.
  ExpiresActive On

  # Cache all files for 2 weeks after access (A).
  ExpiresDefault A1209600

  <FilesMatch \.php$>
    # Do not allow PHP scripts to be cached unless they explicitly send cache
    # headers themselves. Otherwise all scripts would have to overwrite the
    # headers set by mod_expires if they want another caching behavior. This may
    # fail if an error occurs early in the bootstrap process, and it may cause
    # problems if a non-Drupal PHP file is installed in a subdirectory.
    ExpiresActive Off
  </FilesMatch>
</IfModule>

# Various rewrite rules.
<IfModule mod_rewrite.c>

  RewriteEngine on

  RewriteCond %{HTTP_HOST} ^pivot\.tv$ [NC]
  RewriteRule ^(.*)$ http://www.pivot.tv/$1 [L,R=301]

  # Select the correct robots.txt
  RewriteCond %{HTTP_HOST} =www.pivot.tv [OR]
  RewriteCond %{HTTP_HOST} =pivot.tv
  RewriteRule robots.txt robots.prod.txt [L]
  # ..else..
  RewriteRule robots.txt robots.dev.txt [L]

  # Check that the server is not being accessed by its IP address.
  # The ELB health check uses the internal IP address of the webhead.
  #RewriteCond %{SERVER_ADDR} ^(10.28.207.242|10.28.193.19|10.159.36.144|10.157.31.224)$
  #RewriteCond %{HTTP_HOST} !^(10.28.207.242|10.28.193.19|10.159.36.144|10.157.31.224)$
  
  # Check that the server is not being accessed by its webhead name
  #RewriteCond %{HTTP_HOST} !^web(1|2|3|4).prod.pivot.tv$

  # Check that the server is not being accessed by the Akamai origin name
  #RewriteCond %{HTTP_HOST} !=origin.prod.pivot.tv

  # Check allowed subdomains
  #RewriteCond %{HTTP_HOST} !=get.pivot.tv

  # Check that the server is not being accessed by the preferred name
  #RewriteCond %{HTTP_HOST} !=www.pivot.tv

  # All other names for the server should redirect to the preferred name
  #RewriteRule (.*) http://www.pivot.tv/$1 [R=301,L,NC]

  # Please like me campaign redirect (needs to be case-insensitive)
  RewriteCond %{REQUEST_URI} /PleaseLikeMe [NC]
  RewriteRule .* http://www.pleaselikeme.org/ [R=301,L] 

  # Please like me campaign redirect (needs to be case-insensitive)
  RewriteCond %{REQUEST_URI} /projectpivot [NC]
  RewriteRule .* http://projectpivot.pivot.tv/projectpivot [R=301,L]
  RewriteCond %{REQUEST_URI} ^/projectpivot/ [NC]
  RewriteRule ^(.*)$ http://projectpivot.pivot.tv/$1 [R=301,L]

  RewriteRule ^ - [E=protossl]
  RewriteCond %{HTTPS} on
  RewriteRule ^ - [E=protossl:s]

  RewriteRule "(^|/)\." - [F]

  RewriteCond %{REQUEST_FILENAME} !-f
  RewriteCond %{REQUEST_FILENAME} !-d
  RewriteCond %{REQUEST_URI} !=/favicon.ico
  RewriteRule ^ index.php [L]

  # Rules to correctly serve gzip compressed CSS and JS files.
  # Requires both mod_rewrite and mod_headers to be enabled.
  <IfModule mod_headers.c>
    # Serve gzip compressed CSS files if they exist and the client accepts gzip.
    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteCond %{REQUEST_FILENAME}\.gz -s
    RewriteRule ^(.*)\.css $1\.css\.gz [QSA]

    # Serve gzip compressed JS files if they exist and the client accepts gzip.
    RewriteCond %{HTTP:Accept-encoding} gzip
    RewriteCond %{REQUEST_FILENAME}\.gz -s
    RewriteRule ^(.*)\.js $1\.js\.gz [QSA]

    # Serve correct content types, and prevent mod_deflate double gzip.
    RewriteRule \.css\.gz$ - [T=text/css,E=no-gzip:1]
    RewriteRule \.js\.gz$ - [T=text/javascript,E=no-gzip:1]

    <FilesMatch "(\.js\.gz|\.css\.gz)$">
      # Serve correct encoding type.
      Header set Content-Encoding gzip
      # Force proxies to cache gzipped & non-gzipped css/js files separately.
      Header append Vary Accept-Encoding
    </FilesMatch>
  </IfModule>

</IfModule>

AddType video/ogg .ogm
AddType video/ogg .ogv
AddType video/ogg .ogg

AddType video/webm .webm
AddType audio/webm .weba

AddType video/mp4 .mp4
AddType video/x-m4v .m4v
