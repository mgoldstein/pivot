<?php
/* Do something crazy */

/**
 * Implements hook_block_info()
 */
function pivot_navigation_block_info(){
  return array(
    'pivot_navigation' => array(
      'info' => t('Pivot Navigation')
    ),
  );
}

/**
 * Implements hook_block_view()
 */
function pivot_navigation_block_view($delta = ''){
  switch($delta){
    case 'pivot_navigation':
      $block['subject'] = NULL;
      $block['content'] = _pivot_navigation_slim_block_gen();
      return $block;
      break;
  }
}

/**
 * Implements hook_theme()
 */
function pivot_navigation_theme(){
  return array(
    'pivot_navigation' => array (
      'template' => 'templates/navigation',
      'variables' => array (
        'logo' => NULL,
        'slimnav' => NULL,
        'social_menu' => NULL,
        'search' => NULL,
        'right_info' => NULL,
        'left_info' => NULL
      )
    )
  );
}

/**
 *  Implements hook_tp_process_slim_nav_alter().
 */
function pivot_navigation_pivot_preprocess_slim_nav_alter(&$data) {
  //adds tap login
  $get_pivot = l('GET <span class="pivot">Pivot</span>', 'http://find.pivot.tv', array('html' => TRUE, 'attributes' => array('class' => array('important'))));

	//adds in the search form
  $search = theme('html_tag', array(
  'element' => array(
    '#tag' => 'div',
    '#value' => drupal_render(module_invoke('search', 'block_view', 'form')),
    '#attributes' => array(
      'class' => 'search-toggle',
  ))));
  
	//creates search wrapper
  $search_wrapper = theme('html_tag', array(
    'element' => array(
      '#tag' => 'div',
      '#value' => $search,
      '#attributes' => array(
        'class' => 'search',
  ))));
  
  //add it to the right_info
  $data['right_info'] = $search_wrapper . $get_pivot;
}

/**
 *  @function:
 *    This function is used to parse the mobile menu as it was not pulling in the secondary levels
 */
function _pivot_navigation_menu_parser($mobile_menu) {
  //TODO: make sure we have all of the contrib modules and modifications necessary
  $mobile_menu_processed = array();
  //does for each item
  foreach ($mobile_menu as $menu => $value) {
    //creates the menu
    $mobile_menu_processed[$value['link']['mlid']] = array(
      '#title' => $value['link']['link_title'],
      '#href' => $value['link']['link_path'],
      '#theme' => 'menu_link__' . str_replace('-', '_', (strtolower($value['link']['menu_name']))),
      '#attributes' => array(
        'class' => $value['link']['options']['#attributes'],
      ),
      '#original_link' => $value['link'],
      '#below' => (!empty($value['below'])) ? _pivot_navigation_menu_parser($value['below']) : '',
      '#localized_options' => $value['link']['localized_options']
    );

    //ensures we add an extra class to be normal
    $mobile_menu_processed[$value['link']['mlid']]['#attributes']['class'][] = 'normal';
  }

  return $mobile_menu_processed;
}

/**
 *  @function:
 *    THis function is a modified clone of the megamenu and slim nav
 *
 *    @param:
 *      $menu = the menu to pull in and process
 */
function _pivot_navigation_menu_handler($menu = NULL) {
  $items = array();
  //return empty if menu is not set
  if (empty($menu)) {
    return '';
  }

  //grabs the mega tree
  $mega_tree = menu_tree_all_data($menu, $link = NULL, $max_depth = 2);

  //does each tree
  foreach ($mega_tree as $key => $link) {
    //default variables
    $see_more = $categories = $left_menu = '';

    //gets the path
    $path = drupal_get_path_alias($mega_tree[$key]['link']['link_path']);
    $attributes = $link['link']['options']['attributes'];
    $attributes['class'] = array($link['link']['options']['attributes']['class'][0]);
    $title = '<div class="title first-level">'. l($mega_tree[$key]['link']['link_title'], $path, array('attributes' => $attributes)). '</div>';


    $bottom_menu = $mega_tree[$key]['below'];

    //left menu curation
    $left_menu = render(menu_tree_output($bottom_menu));

    $mega_content_wrapper = theme('html_tag', array(
      'element' => array(
        '#tag' => 'div',
        '#value' => $left_menu,
        '#attributes' => array(
          'class' => 'mega-content-wrapper',
        ))));

    $link_mega_wrapper = theme('html_tag', array(
      'element' => array(
        '#tag' => 'div',
        '#value' => $mega_content_wrapper,
        '#attributes' => array(
          'class' => 'mega-content second-level',
        ))));

    //adds into array for items
    $items[] = array(
      'data' => $title . (!empty($bottom_menu) ? $link_mega_wrapper : ''),
      'class' => array("mega-item ". $link['link']['mlid'])
    );
  }

  //outputs the menu using item_list
  $output = theme('item_list', array(
    'items' => $items,
    'title' => NULL,
    'type' => 'ul'
  ));

  return $output;
}

/**
 *  @function:
 *    This function is used to generate the slim nav.
 */
function _pivot_navigation_slim_block_gen() {
  //default variables
  /* Make this static */
  $logo = '<div class="logo"></div>';
  global $base_url;
  $logo = l('', $base_url, array('attributes' => array('class' => array('logo'))));

  /* Get the social menu */
  $social_menu_depth = 2;
  $social_menu_tree = menu_tree_all_data('menu-follow-us', null, $social_menu_depth);
  $slim_nav_social_menu = drupal_render(menu_tree_output($social_menu_tree));

  //prepped array before alter
  $pre_slim_array = array(
    'logo' => $logo,
    'slimnav' => _pivot_navigation_menu_handler($menu = 'menu-primary'),
    'social_menu' => $slim_nav_social_menu,
    'right_info' => array(),
    'left_info' => array(),
  );

  //allow other modules to preprocess the slim nav array
  drupal_alter('pivot_preprocess_slim_nav', $pre_slim_array);

  //calls theme function to theme the output
  $slim_nav_output = theme('pivot_navigation', $pre_slim_array);

  //wraps the output for easier theming
  $output = theme('html_tag', array(
    'element' => array(
      '#tag' => 'div',
      '#value' => $slim_nav_output,
      '#attributes' => array(
        'class' => 'tp-slim-nav'
      )
    )
  ));


  return $output;
}