<?php

/**
 * @file
 * A module defining custom ad targeting for the Pivot.tv website
 *
 */

/**
 * Implements hook_help();
 */
function pivot_ads_help($path, $arg) {
    if ($path == 'admin/help#pivot_ads') {
        return t('A module defining custom ad targeting for Pivot');
    }
}

/**
 * Prevent Drupal from checking for updates on custom created modules
 * */
function pivot_ads_update_projects_alter(&$projects) {
    unset($projects['pivot_ads']);
}

function pivot_ads_dfp_tag_load_alter(&$tag) {
    if (arg(0) == 'node') {
        $node1 = node_load(arg(1));
        $contentType = isset($node1->type) ? $node1->type : "";
        $field_free_tag = isset($node1->field_global_tags['und']) ? $node1->field_global_tags['und'] : array();

        if ($contentType != '') {
            $tag->settings['targeting'][] = array("target" => "Type", "value" => $contentType);
        }
        // Set array to capture free tags
        $terms = array();

        // Check query string for free tag inserts
        $override = filter_input(INPUT_GET, 'dfpKeyval');

        // If query string property exists, parse it for multiple values
        if ($override) {
            $pairs = explode(",", $override);
            foreach ($pairs as $param) {
                $i = strpos($param, ":");
                if (strtolower(substr($param, 0, $i)) === "freetag") {
                    $i++;
                    $term = substr($param, $i);
                    $terms[] = htmlspecialchars(trim($term), ENT_QUOTES, "UTF-8");
                }
            }
        }

        // Check free tag field from content type
        if (count($field_free_tag)) {
            $free_tags = "";
            $gpt_free_tags = "";
            foreach ($field_free_tag as $key => $value) {
                $term = taxonomy_term_load($value['tid']);
                $terms[] = htmlspecialchars(trim($term->name), ENT_QUOTES, "UTF-8");
            }
        }
        // Build custom targeting from free tag field and query string
        if (count($field_free_tag) || $override) {
            // Format free tag values like this ["Schools", "Teachers", "students", "education reform"]
            $free_tags .= implode(',', $terms);
            $tag->settings['targeting'][] = array("target" => "FreeTag", "value" => $free_tags);
        }
    }
    return $tag;
}
