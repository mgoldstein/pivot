<?php
/**
 * Custom Pivot module for the Homepage Hero Slider
 */

/**
 * Implements hook_block_info()
 */
function pivot_hpslider_block_info(){
	$blocks = array();
	$blocks['hpslider'] = array(
		'info' => t('Homepage Slider'),
	);

	return $blocks;
}

/**
 * Implements hook_block_view()
 */
function pivot_hpslider_block_view($delta = ''){
	switch($delta){
		case 'hpslider':
			$block['subject'] = t('Homepage Slider');
			$block['content'] = hpslider_block_content();
			return $block;
			break;
	}

}

function hpslider_block_content(){

	/* Get the nodes from the 'homepage_slider' (3) nodequeue */
	$nodes = nodequeue_load_nodes(3, $backward = FALSE, $from = 0, $count = 10, $published_only = TRUE);
  dpm($nodes, 'nodes');

	/* Get the "What's on Tonight" block */
	$primetime = module_invoke('pivot_schedule', 'block_view', 'primetime_listing');
	$primetime = drupal_render($primetime['content']);

	/* Use the correct node display and add additional markup for the slides */
	$slides = array();
	foreach($nodes as $node){
		$node_view = node_view($node, $view_mode = 'teaser', $langcode = NULL);
		$node_view = drupal_render($node_view);

		/* Add any slide markup for the slider */
		$slides[] = theme('hpslider_slide', array('node' => $node_view));
	}
	$slides = implode('', $slides);

	//adds the css into the body as it gets removed on the frontend element on resize
	$node_count = count($nodes);
	$slider_width = 100 / $node_count;
	
	//remove the max-width if they want to auto adjust for all screen size
	drupal_add_css(
		'@media all and (max-width: 480px) {
			body .bx-controls .bx-pager .bx-pager-item {
				width:' . $slider_width . '%;
			}
			}',
		'inline'
	);

	/* Now that we have the slides themed, let's 'wrap' things up */
	$background = variable_get('hpslider_background', '');
	$background = file_load($background);
	$background = file_create_url($background->uri);
	$slider = theme('hpslider_wrapper', array('slides' => $slides, 'background' => $background, 'primetime' => $primetime));

	return $slider;
}

/**
 * Implements hook_theme()
 */
function pivot_hpslider_theme(){
 return array(
	 'hpslider_slide' => array(
			'template' => 'templates/hpslider-slide',
			'variables' => array(
				'node' => '',
			)
	 ),
	 'hpslider_wrapper' => array(
			'template' => 'templates/hpslider-wrapper',
		  'variables' => array(
			  'slides' => array(),
			  'background' => ''
		  )
	 )
 );

}

/**
 * Implements hook_preprocess_node
 */
function pivot_hpslider_preprocess_node(&$variables) {
	/* Use the Teaser display view for rendering out a slide */
	if($variables['view_mode'] == 'teaser' && $variables['type'] == 'homepage_slide') {
		/* Set logic for video/image display */
		$default = '';
		if(!empty($variables['field_video_reference'])){  //Use video field if it exists
			$video = field_get_items('node', $variables['node'], 'field_video_reference');
			$video_id = $video[0]['target_id'];
			$video = entity_load('node', array($video_id));
			$video = current($video);
			$video = field_view_field('node', $video, 'field_video_media', 'pm_jwplayer');
			$variables['media'] = drupal_render($video);
		}elseif(!empty($variables['field_hs_slider_image'])){  //Use Image field if video doesn't exist
			$image_display = 'teaser';
			$image = field_view_field('node', $variables['node'], 'field_hs_slider_image', $image_display, $langcode = NULL);
			$variables['media'] = drupal_render($image);
		}else{
			$variables['media'] = $default;
		}

		if (isset($variables['field_hs_link'][0]['title']) && isset($variables['field_hs_link'][0]['url'])) {
			$variables['more_link'] = l(
				$variables['field_hs_link'][0]['title'],
				$variables['field_hs_link'][0]['url'],
				array('attributes' => array(
					'class' => 'important',
					'target' => isset($variables['field_hs_link'][0]['attributes']['target']) ?
							$variables['field_hs_link'][0]['attributes']['target'] : NULL,
				))
			);
		}

		/* Set the template to suggest */
		$variables['theme_hook_suggestion'] = 'node__homepage_slide__teaser';
	}
}

/**
 * Implements hook_form_alter();
 */
function pivot_hpslider_form_alter(&$form, &$form_state, $form_id){

	if($form_id == 'block_admin_configure' && $form['delta']['#value'] == 'hpslider'){

		$form['settings']['bgimage'] = array(
			'#type' => 'managed_file',
			'#title' => t('Background Image'),
			'#default_value' => variable_get('hpslider_background', ''),
			'#upload_location' => 'public://hpslider/',
		);
		$form['#submit'][] = 'pivot_hpslider_form_submit_callback';
	}
}

/**
 * Callback for block submit handler
 * @see pivot_hpslider_form_alter
 */
function pivot_hpslider_form_submit_callback($form, &$form_state) {
	/* Save the image */
	$file_id = $form_state['values']['bgimage'];
  if(!empty($file_id)){
    $file = file_load($file_id);
    $file->status = FILE_STATUS_PERMANENT;
    file_save($file);
    file_usage_add($file, 'user', 'user', 1);
    variable_set('hpslider_background', $file_id);
  }else{
    $file = variable_get('hpslider_background', '');
    $file = file_load($file);
    file_delete($file);
    variable_del('hpslider_background');
  }


}